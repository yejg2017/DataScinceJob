model=ar(Caddyshack_lag5,aic = TRUE)
model
model$order
model$aic
LeftOvers_lag2=lag(LeftOvers,-2)
LeftOvers=HWTrends$Leftovers
Ham_lag3=lag(Ham,-2)
LeftOvers=HWTrends$Leftovers
LeftOvers_lag2=lag(LeftOvers,-2)
rm(Ham_lag2)
ccf(Ham_lag3,LeftOvers_lag2)
?
ccf
ccf(Ham,LeftOvers)
Ham_lag3=lag(Ham,-2)
LeftOvers=HWTrends$Leftovers
LeftOvers_lag2=lag(LeftOvers,-2)
ccf(Ham_lag3,LeftOvers_lag2)
ccf(Ham,LeftOvers)
Ham_lag3=lag(Ham,-2)
LeftOvers=HWTrends$Leftovers
LeftOvers_lag2=lag(LeftOvers,-2)
ccf(Ham,LeftOvers,main="Ham vs LeftOvers",ylab = "cross-correlation")
ccf(Ham_lag3,LeftOvers_lag2,ylab = "cross-correlation",main="Ham(lag 3) vs LeftOvers(lag 2)")
Ham_lag3=lag(Ham,-3)
LeftOvers=HWTrends$Leftovers
LeftOvers_lag2=lag(LeftOvers,-2)
ccf(Ham,LeftOvers,main="Ham vs LeftOvers",ylab = "cross-correlation")
ccf(Ham_lag3,LeftOvers_lag2,ylab = "cross-correlation",main="Ham(lag 3) vs LeftOvers(lag 2)")
cor.test(Ham_lag3,LeftOvers_lag2)
?cor.test
cor.test(Ham,LeftOvers)
cor.test(Ham_lag3,LeftOvers_lag2)
print(cor.test(Ham,LeftOvers))
print(cor.test(Ham_lag3,LeftOvers_lag2))
print(cor.test(Ham_lag3,LeftOvers_lag2))
cor.test(Ham_lag3,LeftOvers_lag2)
cor.test(Ham,LeftOvers)
lm.model=lm(LeftOvers_lag2~Ham_lag3,data = data.frame(LeftOvers_lag2=LeftOvers_lag2,Ham_lag3=Ham_lag3))
lm.model
summary(lm)
summary(lm.model)
lm.model=lm(LeftOvers_lag2~Ham_lag3,data = data.frame(LeftOvers_lag2=LeftOvers_lag2,Ham_lag3=Ham_lag3))
summary(lm.model)
colnames(HWTrends)
install.packages("lmtest")
library(lmtest)
?subset
df=subset(x = HWTrends,select = c("Ham","LeftOvers"))
df=subset(x = HWTrends,select = c(Ham,LeftOvers))
colnames(HWTrends)
df=subset(HWTrends,select = c(Ham,LeftOvers))
df=HWTrends[,c("Ham","LeftOvers"))
df=HWTrends[,c("Ham","LeftOvers")]
df=HWTrends[,c("Ham")]
HWTrends[,"LeftOvers"]
colnames(HWTrends)
df=HWTrends[,c("Ham","Leftovers")]
lmtest::grangertest(Leftovers~Ham,order=3)
lmtest::grangertest(Leftovers~Ham,data=df,order=3)
granger.tetst=lmtest::grangertest(Leftovers~Ham,data=df,order=3)
summary(granger.tetst)
granger.test=lmtest::grangertest(Leftovers~Ham,data=df,order=3)
?grangertest
granger.test
L
install.packages("vars")
library(vars)
vars::causality(df$Ham)
library(lmtest)
df=HWTrends[,c("Ham","Leftovers")]
granger.test=lmtest::grangertest(Leftovers~Ham,data=df,order=3)
library(lmtest)
df=HWTrends[,c("Ham","Leftovers")]
lmtest::grangertest(Leftovers~Ham,data=df,order=3)
library(lmtest)
df=HWTrends[,c("Ham","Leftovers")]
lmtest::grangertest(Leftovers~Ham,data=df,order=5)
library(lmtest)
df=HWTrends[,c("Ham","Leftovers")]
lmtest::grangertest(Leftovers~Ham,data=df,order=1)
library(lmtest)
df=HWTrends[,c("Ham","Leftovers")]
lmtest::grangertest(Leftovers~Ham,data=df,order=0)
library(lmtest)
df=HWTrends[,c("Ham","Leftovers")]
lmtest::grangertest(Leftovers~Ham,data=df,order=3)
?VAR
adf.test(Ham)
library(tseries)
adf.test(Ham)
adf.test(df$Ham)
lmtest::grangertest(Leftovers~Ham,data=df,order=3)
?diff
adf.test(df$Ham)
FITB=as.data.frame(getSymbols("FITB",auto.assign = FALSE,from="2018-01-01",to="2018-10-01"))
library(quantmod)
library(stringr)
library(tseries)
install.packages("tseries")
library(quantmod)
library(stringr)
library(tseries)
FITB=as.data.frame(getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01"))
KR=as.data.frame(getSymbols("KR",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01"))
dim(FITB)[1]
dim(KR)[1]
install.packages("quadprog")
library(quantmod)
library(stringr)
library(tseries)
?ts
x=ts(FITB[,4],start = "2018-01-01",end = "2018-10-01",frequency = 7,deltat = 2)
x=ts(FITB[,4],start = c(2018,1,1),end = c(2018,10,1),frequency = 7,deltat = 2)
x
head(FITB)
write.table(FITB,file = "FITB.csv",row.names = TRUE,col.names = TRUE,sep = ",")
write.table(FITB,file = "./FITB.csv",row.names = TRUE,col.names = TRUE,sep = ",")
write.table(FITB,file = "./FITB.csv",row.names = TRUE,col.names = TRUE,sep = ",")
write.table(KR,file = "./KR.csv",row.names = TRUE,col.names = TRUE,sep = ",")
dd=as.Date(rownames(FITB))
dd
Investmen=FITB[,4]
plot(dd,Investmen)
plot(dd,Investmen,type="l")
plot.ts(ts(Investmen))
?as.Date
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l")
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l")
?diff
?as.POSIXct.Date
library(gglot2)
library(ggplot2)
time=as.Date(rownames(FITB))
Investment=FITB[,4]
FITB.Investment=data.frame(Date=time,Investment=Investment)
ggplot(FITB.Investment,aes(Date,Investment)) +
geom_line(aes(color="ibm"))
plot(time,Investmen,type="l",col="r")
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
# Plot log returns
plot(time,Investment_diff,type='l', main=NULL,)
Investment_diff= diff(Investmen,lag=1)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time,Investment_diff,type='l', main=NULL,)
Investment_diff= diff(Investmen,lag=1,trim=TRUE)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time,Investment_diff,type='l', main=NULL,)
length(Investment)
rm(Investmen)
length(Investment_diff)
# Plot log returns
plot(Investment_diff,type='l', main=NULL,)
# Plot log returns
plot(Investment_diff,type='l', main=NULL,xlab =NULL,ylab = "Investment difference" )
# Plot log returns
plot(Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference" )
length(time[-1])
# Plot log returns
plot(time[-1],Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference" )
Investment_diff= diff(Investmen,lag=1,trim=TRUE)
Investment_diff= diff(Investment,lag=1,trim=TRUE)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time[-1],Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference",col="red")
?plot
str(time)
?as.Date.ts
time=as.Date.ts(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
time=as.Date(rownames(FITB),format = "%YM%m-%d")
time=as.Date(rownames(FITB),format = "%YM%m-%d")
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
time
time=as.Date(rownames(FITB),format = "%Y/%m/%d")
time
as.Date(rownames(FITB),format = "%Y/%m/%d")
time=as.Date(rownames(FITB),format = "%y/%m/%d")
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
?axis
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
plot(time,Investmen,type="l",col="red")
axis(1,time,c("Jan","Mar","Fri","July","Sept"))
plot(time,Investmen,type="l",col="red",xlab = "")
apply(FITB,2,sd)
?std
?sd
rm(Investmen)
apply(FITB,2,sd)
acf(ts(Investment))
adf.test(ts(Investment),alternative = "stationary")
Box.test(ts(Investment))
time=as.Date(rownames(FITB))
Investmen=FITB[,4]
Investment=Investment/Investment[1]
plot(time,Investmen,type="l",col="red",xlab = "")
Investment
Investment[1]
Investment[1]
Investment[2]
Investment_diff= diff(Investment,lag=1,trim=TRUE)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time[-1],Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference",col="red")
Investmen=FITB[,4]
Investment[1]
Investment[2]
Investment[4]
head(FITB)
time=as.Date(rownames(FITB))
Investment=FITB[,4]
Investment=Investment/Investment[1]
plot(time,Investmen,type="l",col="red",xlab = "")
time=as.Date(rownames(FITB))
Investment=FITB[,4]
Investment=Investment/Investment[1]
plot(time,Investment,type="l",col="red",xlab = "")
Investment_diff= diff(Investment,lag=1,trim=TRUE)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time[-1],Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference",col="red")
apply(FITB,2,sd)
acf(ts(Investment))
adf.test(ts(Investment),alternative = "stationary")
pp.test(ts(Investment))
apply(FITB,2,sd)
acf(ts(Investment))
pp.test(ts(Investment),alternative = "stationary")
rm(Investmen)
?pp.test
time=as.Date(rownames(FITB))
Investment=FITB[,4]
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
Investment_diff= diff(FITB.returns,lag=1,trim=TRUE)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time[-1],Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference",col="red")
apply(FITB,2,sd)
acf(ts(FITB.returns))
pp.test(ts(FITB.returns),alternative = "stationary")
colnames(FITB)
KR.returns=KR.Investment/KR.Investment[1]  # returns to Kroger stock
KR.Investment=KR[,4]
KR.returns=KR.Investment/KR.Investment[1]  # returns to Kroger stock
KR.Investment=KR[,4]
KR.returns=KR.Investment/KR.Investment[1]  # returns to Kroger stock
acf(ts(KR.returns))
pp.test(ts(KR.returns),alternative = "stationary")
KR.returns.diff=diff(KR.Investment)
plot.ts(ts(KR.returns.diff))
pp.test(ts(KR.returns.diff))
KR.returns.diff=diff(KR.Investment)
plot.ts(ts(KR.returns.diff))
pp.test(ts(KR.returns.diff))
KR.returns.lag_1=lag(KR.returns.diff,-1)
KR.returns.lag_1=lag(KR.returns.diff,-2)
FITB.returns.diff=diff(FITB.returns)
FITB.returns.lag_1=lag(FITB.returns.diff,-1)
FITB.returns.lag_2=lag(FITB.returns.diff,-2)
Data=cbind(KR.returns.diff,KR.returns.lag_1,KR.returns.lag_2,FITB.returns.lag_1,FITB.returns.lag_2)
KR.returns.lag_1=lag(KR.returns.diff,-1)
KR.returns.lag_1=lag(KR.returns.diff,-2)
FITB.returns.diff=diff(FITB.returns)
FITB.returns.lag_1=lag(FITB.returns.diff,-1)
FITB.returns.lag_2=lag(FITB.returns.diff,-2)
Data=data.frame(KR.returns.diff,KR.returns.lag_1,KR.returns.lag_2,FITB.returns.lag_1,FITB.returns.lag_2)
KR.returns.lag_1=lag(KR.returns.diff,-1)
KR.returns.lag_1=lag(KR.returns.diff,-2)
FITB.returns.diff=diff(FITB.returns)
FITB.returns.lag_1=lag(FITB.returns.diff,-1)
FITB.returns.lag_2=lag(FITB.returns.diff,-2)
Data=data.frame(KR.returns.diff=KR.returns.diff,
KR.lag_1=KR.returns.lag_1,
KR.lag_2=KR.returns.lag_2,
FITB.lag_1=FITB.returns.lag_1,
FITB.lag_2=FITB.returns.lag_2)
KR.returns.lag_1=lag(KR.returns.diff,-1)
KR.returns.lag_1=lag(KR.returns.diff,-2)
FITB.returns.diff=diff(FITB.returns)
FITB.returns.lag_1=lag(FITB.returns.diff,-1)
FITB.returns.lag_2=lag(FITB.returns.diff,-2)
Data=data.frame(KR.diff=KR.returns.diff,
KR.lag_1=KR.returns.lag_1,
KR.lag_2=KR.returns.lag_2,
FITB.lag_1=FITB.returns.lag_1,
FITB.lag_2=FITB.returns.lag_2)
length(KR.returns.diff)
KR.returns.diff
KR.returns.lag_1
KR.returns.lag_1=lag(KR.returns.diff,-1)
KR.returns.lag_2=lag(KR.returns.diff,-2)
FITB.returns.diff=diff(FITB.returns)
FITB.returns.lag_1=lag(FITB.returns.diff,-1)
FITB.returns.lag_2=lag(FITB.returns.diff,-2)
Data=data.frame(KR.diff=as.numeric(KR.returns.diff),
KR.lag_1=as.numeric(KR.returns.lag_1),
KR.lag_2=as.numeric(KR.returns.lag_2),
FITB.lag_1=as.numeric(FITB.returns.lag_1),
FITB.lag_2=as.numeric(FITB.returns.lag_2))
model=lm(KR.diff~KR.lag_1+KR.lag_2+FITB.lag_1,FITB.lag_2,data=Data)
dim(Data)
Data
model=lm(KR.diff~KR.lag_1+KR.lag_2+FITB.lag_1+FITB.lag_2,data=Data)
model=lm(KR.diff~KR.lag_1+KR.lag_2+FITB.lag_1+FITB.lag_2,data=Data)
summary(model)
anova(model)
model.all=lm(KR.diff~KR.lag_1+KR.lag_2+FITB.lag_1+FITB.lag_2,data=Data)
model.subset=lm(KR.diff~KR.lag_1+KR.lag_2,data=Data)
anova(model.all,model.subset,test="F")
summary(anova(model.all,model.subset,test="F"))
?anavo
?anova
model=lm(KR.diff~KR.lag_1+KR.lag_2+FITB.lag_1+FITB.lag_2,data=Data)
summary(model)
summary(model.subset)
HWTrends<-read.csv("./HWTrends.csv",header = TRUE)
Ham=HWTrends$Ham
par(mfrow=c(1,3))
pacf(Ham)
acf(Ham)
plot.ts(ts(Ham))
adf.test(Ham,alternative = "stationary")
Caddyshack=HWTrends$Caddyshack
par(mfrow=c(1,3))
pacf(Caddyshack)
acf(Caddyshack)
plot.ts(ts(Caddyshack))
adf.test(Caddyshack,alternative = "stationary")
Caddyshack=ts(HWTrends$Caddyshack)
Caddyshack_lag5=lag(Caddyshack,lag = -5)
plot(Caddyshack_lag5,main="Lag 5 on Caddyshack")
model=ar(Caddyshack,aic = TRUE)
model
?ar
model=ar(Caddyshack,aic = TRUE,order.max = 5)
model
HWTrends<-read.csv("./HWTrends.csv",header = TRUE)
Ham=HWTrends$Ham
par(mfrow=c(1,3))
pacf(Ham)
acf(Ham)
plot.ts(ts(Ham))
adf.test(Ham,alternative = "stationary")
Ham_lag3=lag(Ham,-3)
LeftOvers=HWTrends$Leftovers
LeftOvers_lag2=lag(LeftOvers,-2)
ccf(Ham,LeftOvers,main="Ham vs LeftOvers",ylab = "cross-correlation")
Data=data.frame(LeftOvers_lag_1=lag(LeftOvers,-1),
LeftOvers_lag_2=lag(LeftOvers,-2),
Ham_lag_1=lag(Ham,-1),
Ham_lag_2=lag(Ham,-2),
Ham_lag_3=lag(Ham,-3))
lm.model=lm(LeftOvers_lag_1+LeftOvers_lag_2~Ham_lag_1+Ham_lag_2+Ham_lag_3,data=Data)
summary(lm.model)
anova(lm.model)
lm.model=lm(LeftOvers_lag_1+LeftOvers_lag_2~Ham_lag_1*Ham_lag_2*Ham_lag_3,data=Data)
lm.model=lm(LeftOvers_lag_1+LeftOvers_lag_2~Ham_lag_1*Ham_lag_2*Ham_lag_3,data=Data)
anova(lm.model)
lm.model=lm(LeftOvers_lag_1+LeftOvers_lag_2~Ham_lag_1*Ham_lag_2*Ham_lag_3,data=Data)
summary(lm.model)
lm.model=lm(LeftOvers_lag_1+LeftOvers_lag_2~Ham_lag_1+Ham_lag_2+Ham_lag_3,data=Data)
summary(lm.model)
?arima
lm.model=lm(c(LeftOvers_lag_1,LeftOvers_lag_2)~Ham_lag_1+Ham_lag_2+Ham_lag_3,data=Data)
lm.model=lm(cbind(LeftOvers_lag_1,LeftOvers_lag_2)~Ham_lag_1+Ham_lag_2+Ham_lag_3,data=Data)
summary(lm.model)
lm.model=lm(cbind(LeftOvers_lag_1,LeftOvers_lag_2)~0+Ham_lag_1+Ham_lag_2+Ham_lag_3,data=Data)
summary(lm.model)
?lm
str(lm.model)
time=as.Date(rownames(FITB))
FITB=as.data.frame(getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01"))
library(quantmod)
library(stringr)
library(tseries)
library(ggplot2)
FITB=as.data.frame(getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01"))
KR=as.data.frame(getSymbols("KR",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01"))
dim(FITB)[1]
dim(KR)[1]
time=as.Date(rownames(FITB))
Investment=FITB[,4]
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
axis(1,xaxp=c("Jan","Mar","Fri","July","Sept"))
plot(time,FITB.returns,type="l",col="red",xlab = "")
time
?as.POSIXct.Date
time=as.POSIXct(rownames(FITB))
time
plot(time,FITB.returns,type="l",col="red",xlab = "")
class(time)
time=as.POSIXct(rownames(FITB),tz="GMT")
plot(time,FITB.returns,type="l",col="red",xlab = "")
x=
plot(time,FITB.returns,type="l",col="red",xlab = "")
x
str(plot(time,FITB.returns,type="l",col="red",xlab = ""))
time
time=as.Date(rownames(FITB))
head(FITB)
rownames(FITB)
as.Date.ts(rownames(FITB))
as.Date.yearqtr(rownames(FITB))
as.Date.yearmon(rownames(FITB))
as.Date.dates(rownames(FITB))
as.Date.character(rownames(FITB))
as.Date.character(rownames(FITB),format = "%y%m%d")
as.Date.character(rownames(FITB),format = "%y/%m/%d")
as.Date.character(rownames(FITB),format = "%d-%m-%y")
x=getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01")
str(x)
x  [[2]]
y=x[[1]]
y
x[1]
x[2]
plot(x[,4])
y=x[,4]
y
plot.ts()
?plot.ts
time=as.Date(rownames(FITB))
Investment=getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01")[,4]
FITB.returns=Investment/Investment[1]  # returns
plot(FITB.returns,type="l",col="red",xlab = "")
Investment=as.numeric(getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01")[,4])
time=as.Date(rownames(FITB))
Investment=as.numeric(getSymbols("FITB",auto.assign = FALSE,src = "yahoo",from="2018-01-01",to="2018-10-01")[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(FITB.returns,type="l",col="red",xlab = "")
time=as.Date(rownames(FITB))
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(FITB.returns,type="l",col="red",xlab = "")
plot.ts(time,FITB.returns,type="l",col="red",xlab = "")
plot.xts(time,FITB.returns,type="l",col="red",xlab = "")
(time,FITB.returns,type="l",col="red",xlab = "")
plot(time,FITB.returns,type="l",col="red",xlab = "")
plot(y)
?axis
plot(time,FITB.returns,type="l",col="red",xlab = "")
axis(1,time,c("Jan","Mar","May","July","Sept"))
plot(time,FITB.returns,type="l",col="red",xlab = "")
axis(1,time,time)
?as.Date.date
format(time[1],"%a %b %c")
format(time[1],"%y %m %d")
format(time,"%y %m %d")
format(time,"%m/%d/%y")
format(rownames(FITB),"%m/%d/%y")
time=format(as.Date(rownames(FITB)),"%m/%d/%y")
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
format(as.Date(rownames(FITB)),"%m/%d/%y")
time=format(as.Date(rownames(FITB)),"%m-%d-%y")
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
time=format(as.Date(rownames(FITB)),"%y-%m-%d")
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
time=as.Date(rownames(FITB))
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
?Sys.setlocale
Sys.getlocale()
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "de_DE.utf8")
Sys.setlocale("LC_TIME", "German")
Sys.getlocale("LC_TIME")
time=as.Date(rownames(FITB))
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
Sys.setlocale("LC_TIME", "America")
Sys.setlocale("LC_TIME", "American")
library(quantmod)
library(stringr)
library(tseries)
library(ggplot2)
Sys.setlocale("LC_TIME", "American")
time=as.Date(rownames(FITB))
Investment=as.numeric(FITB[,4])
FITB.returns=Investment/Investment[1]  # returns
plot(time,FITB.returns,type="l",col="red",xlab = "")
Investment_diff= diff(FITB.returns,lag=1,trim=TRUE)
Investment_diff = Investment_diff[!is.na(Investment_diff)]
# Plot log returns
plot(time[-1],Investment_diff,type='l', main=NULL,xlab ="",ylab = "Investment difference",col="red")
