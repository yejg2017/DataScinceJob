install.packages('igraph')
install.packages('igraph')
library(igraph)
install.packages('ggplot')
install.packages('ggplot2')
library(ggplot2)
install.packages('colorspace')
library(ggplot2)
install.packages('colorspace')
library(ggplot2)
source("https://bioconductor.org/biocLite.R")
biocLite("sva")
source("https://bioconductor.org/biocLite.R")
biocLite("sva")
source('http://bioconductor.org/biocLite.R')
biocLite('destiny')
library(density)
library(destiny)
install.packages('FNN')
install.packages('FNN')
library(destiny)
install.packages('lazyeval')
library(destiny)
install.packages('rlang')
library(destiny)
install.packages('stringi')
library(destiny)
library(sva)
library(igraph)
install.packages('MAST')
setwd("D:/201801016R/")
list.files()
wagexp=read.csv("./wagexp.csv",header = TRUE)
head(wagexp)
summary((wagexp))
wagexp=read.csv("./wagexp.csv",header = TRUE)
summary((wagexp))
sum(is.na(wagexp))
wagexp=wagexp[!duplicated(wagexp),]
dim(wagexp)
wagexp=wagexp[!duplicated(wagexp),]
dim(wagexp)[0]
head(wagexp)
all.model=lm(WAGE~age+I(age^2)+EXP+HSDROP+HSGRAD+ASSOC+FEMALE,data = wagexp)
all.model=lm(WAGE~AGE+I(AGE^2)+EXP+HSDROP+HSGRAD+ASSOC+FEMALE,data = wagexp)
summary(all.model)
reduce.model=lm(WAGE~AGE+I(AGE^2)+HSDROP+HSGRAD+ASSOC+FEMALE,data = wagexp)
summary(reduce.model)
coef(all.model)
coef(all.model)["EXP"]
all.model$coefficients
residuals(all.model)
sum(residuals(all.model)^2)/()
n=dim(wagexp)[0]
p=dim(wagexp)[1]
sum(residuals(all.model)^2)/(n-p)
sum(residuals(all.model)^2)
sum(residuals(all.model)^2)/(n-p)
n--p
n-p
dim(wagexp)
dim(wagexp)[0]
dim(wagexp)[1]
n=dim(wagexp)[1]
p=dim(wagexp)[2]
sum(residuals(all.model)^2)/(n-p)
coef(all.model)["EXP"]/0.079027
?qt
pt(0.9056855,df=n-p)
lm
coef(all.model)["EXP"]/sqrt(0.079027)
pt(0.254604,df=n-p)
pt(0.906)
pt(0.906,df=1)
pt(0.906,df=n-p)
pt(0.906,df=n-p-1)
coef(all.model)["EXP"]/0.079027
str(all.model)
all.model
all.model$coefficients
a=summary(all.model)
a$coefficients
beta3_hat=model.summary["EXP","Estimate"]
model.summary=summary(all.model)
beta3_hat=model.summary["EXP","Estimate"]
str(model.summary)
model.summary=summary(all.model)$coefficients
beta3_hat=model.summary["EXP","Estimate"]
beta3_hat
sd(beta3)=model.summary["EXP","Std.Error"
]
str(model.summary)
sd(beta3)=model.summary["EXP","Std. Error"]
std_beta3=model.summary["EXP","Std. Error"]
std_beta3
beta3_hat/std_beta3
confint(all.model)
confidents=confint(all.model)
### load data
```{r}
wagexp=read.csv("./wagexp.csv",header = TRUE)
all.model=lm(WAGE~AGE+I(AGE^2)+EXP+HSDROP+HSGRAD+ASSOC+FEMALE,data = wagexp)
model.summary=summary(all.model)$coefficients
confidents=confint(all.model)
summary(all.model)
confidents
beta3_hat=model.summary["EXP","Estimate"]
std_beta3=model.summary["EXP","Std. Error"]
t.value=beta3_hat/std_beta3
beta_confitdence=confidents["EXP",]
beta3_hat=model.summary["EXP","Estimate"]
std_beta3=model.summary["EXP","Std. Error"]
t.value=beta3_hat/std_beta3
beta_confitdence=confidents["EXP",]
cat("the t value :%f",t.value)
beta3_hat=model.summary["EXP","Estimate"]
std_beta3=model.summary["EXP","Std. Error"]
t.value=beta3_hat/std_beta3
beta_confitdence=confidents["EXP",]
cat("the t value : \n",t.value)
print(beta_confitdence)
beta3_hat=model.summary["EXP","Estimate"]
std_beta3=model.summary["EXP","Std. Error"]
t.value=beta3_hat/std_beta3
beta_confitdence=confidents["EXP",]
cat("the t value :",t.value,"\n")
print(beta_confitdence)
library(car)
require(car)
car::vif(all.model)
plot(wagexp[,"AGE"],wagexp[,"EXP"],type="b",col='red')
plot(wagexp[,"AGE"],wagexp[,"EXP"],col='red')
cor(wagexp[,"AGE"],wagexp,"EXP")
cor()
cor(wagexp[,"AGE"],wagexp[,"EXP"])
plot(wagexp[,"AGE"],wagexp[,"EXP"],col='red',xlab = "age",ylab = "experience",
main=paste0("the correlation of age against experience is :",cor(wagexp[,"AGE"],wagexp[,"EXP"])))
plot(wagexp[,"AGE"],wagexp[,"EXP"],col='red',xlab = "age",ylab = "experience",
main=paste0("the correlation of age against experience is \n ",cor(wagexp[,"AGE"],wagexp[,"EXP"])))
plot(wagexp[,"AGE"],wagexp[,"EXP"],col='red',
xlab = "age",
ylab = "experience",
main=paste0("the correlation of age against experience is\n",floor(cor(wagexp[,"AGE"],wagexp[,"EXP"]))))
plot(wagexp[,"AGE"],wagexp[,"EXP"],col='red',
xlab = "age",
ylab = "experience",
main=paste0("the correlation of age against experience is\n",cor(wagexp[,"AGE"],wagexp[,"EXP"])))
cor(wagexp[,-1])
cor(as.matrix(wagexp[,-1]))
pairs(wagexp[,-1])
wagexp[,-1]
predictor=c("AGE","EXP","HSDRP","HSGRAD","ASSOC","FEMALE")
cor(wagexp[,predictor])
predictor=c("AGE","EXP","HSDRoP","HSGRAD","ASSOC","FEMALE")
cor(wagexp[,predictor])
wagexp[,predictor]
colnames(wagexp)
wagexp[,c("AGE")]
wagexp[,c("AGE","FEMALE","HSDROP","HSGRAD")]
wagexp[,c("AGE","FEMALE","HSDROP","HSGRAD","ASSOC")]
cor(wagexp[,c("AGE","FEMALE","HSDROP","HSGRAD","ASSOC")])
cor(wagexp[,c("AGE","FEMALE","HSDROP","HSGRAD","ASSOC","EXP")])
car::vif(all.model)
ols_eigen_cindex
??ols_eigen_cindex
new.model=lm(WAGE ~ log2(AGE)
ASSOC + FEMALE)
new.model=lm(WAGE ~ log2(AGE)+ED*FEMALE,data=wagexp)
summary(new.model)
p
n-p
n
wagexp$ln.wage=log2(wagexp$WAGE)
new.model=lm(ln.wage ~ log2(AGE)+ED*FEMALE,data=wagexp)
summary(new.model)
new.model.summary=summary(new.model)$Coefficient
new.model.confident=confint(new.model)
new.model
new.model.confident
summary(new.model)
wagexp$ln.wage=log2(wagexp$WAGE)
new.model=lm(ln.wage ~ log2(AGE)+ED*FEMALE,data=wagexp)
summary(new.model)
new.model.summary=summary(new.model)$Coefficient
new.model.confident=confint(new.model)
exp(0.01395)
install.packages("vars")
library(vars)
?vars::VAR
install.packages('het.test')
library(het.test)
?het.test::whites.htest
require(het.test)
?VAR
het.test::whites.htest(new.model)
Res=residuals(new.model)
plot(wages[,"ED"],Res,col="red",xlab="education",ylab="residual")
colnames(wagexp)
Res=residuals(new.model)
plot(wagexp[,"ED"],Res,col="red",xlab="education",ylab="residual")
fitted(new.model)
?fiited
?fitted
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2))
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2),data=df)
summary(new2.model)
new.model$residuals
new.model$rank
summary(new.model)$r.square
summary(new2.model)$r.square
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2),data=df)
R.squre=summary(new2.model)$r.square
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2),data=df)
R.squre=summary(new2.model)$r.square
chi=n*R.squre
chi=n*R.squre
chi
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2),data=df)
R.squre=summary(new2.model)$r.square
chi=n*R.squre
pchisq(chi,df=3)
pchisq(chi,df=2)
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2),data=df)
summary(new2.model)
R.squre=summary(new2.model)$r.square
chi=n*R.squre
pchisq(chi,df=2)
lnwage_hat=fitted(new.model) # y_hat
df=data.frame(res=residuals(new.model),lnwage_hat=lnwage_hat)
new2.model=lm(res~lnwage_hat+I(lnwage_hat^2),data=df)
summary(new2.model)
R.squre=summary(new2.model)$r.square
chi=n*R.squre
pchisq(chi,df=3)
summary(new.model,robust=TRUE)
summary(new.model)
install.packages(estimatr)
install.packages("estimatr")
install.packages("robuest")
library(MASS)
?rlm
robust.model=rlm(ln.wage ~ log2(AGE)+ED*FEMALE,data=wagexp)
summary(robust.model)
summary(new.model)
summary(robust.model)$r.square
a=summary(robust.model)
a$
a
a
summary(new.model)
robust.model=rlm(ln.wage ~ log2(AGE)+ED*FEMALE,data=wagexp)
summary(robust.model)
residuals(robust.model)
sum(residuals(robust.model)^2)
sum(residuals(new.model)^2)
robust.model$residuals
robust.model$wresid
coefficients(robust.model)
coefficients(nerw.model)
coefficients(new.model)
coefficients(robust.model)["log2(AGE)"]
summary(new.model)
Res=residuals(new.model)
plot(wagexp[,"ED"],Res,col="red",xlab="education",ylab="residual")
abline(h = 0)
