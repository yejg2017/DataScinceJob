biocLite("sva")
source("https://bioconductor.org/biocLite.R")
biocLite("sva")
source('http://bioconductor.org/biocLite.R')
biocLite('destiny')
library(density)
library(destiny)
install.packages('FNN')
install.packages('FNN')
library(destiny)
install.packages('lazyeval')
library(destiny)
install.packages('rlang')
library(destiny)
install.packages('stringi')
library(destiny)
library(sva)
library(igraph)
install.packages('MAST')
x <- c(2.53, 4.22, 1.15, 4.33, 7.31, 5.89, 28.69, 5.19, 8.38, 13.65, 13.23, 5.18, 14.14.78 14.15 20.19 18.09 17.57 21.7)
ExponentialSmoothing=function(Xt,lambda){
At=rep(0,length(Xt))
for(t in 1:length(Xt)){
if(t==1){
At[t]=Xt[t]
}else{
At[t]=lambda*Xt[t]+(1-lambda)*Xt[t-1]
}
}
return(At)
}
x <- c(2.53, 4.22, 1.15, 4.33, 7.31,
5.89, 28.69, 5.19, 8.38, 13.65,
13.23, 5.18, 14.61,14.78,14.15,20.19,
18.09,17.57,21.7)
A=ExponentialSmoothing(Xt=x,lambda = 0.2)
A
length(x)
length(A)
?rexp
plot(x,A)
plot(x,A,type="l")
plot(x,A,type="o")
plot(1:length(x),type="o")
plot(1:length(x),x,type="o")
plot(1:length(x),A,type="o",col="red",add=T)
plot(1:length(x),x,type="o",col="red",add=T)
plot(1:length(x),X,col="blue")
plot(1:length(x),x,col="blue")
plot(1:length(x),x,col="blue",type="l")
plot(1:length(x),x,col="blue",type="l")
lines(1:length(x),A,col="red")
?legend
Y=rexp(n=50,rate = 1)
Y
plot(1:length(Y),Y,type="o")
mu=1
??kurtosis
describe
??describe
install.packages("rela")
library(rela)
install.packages("boot")
?boot
GenerateSample<-function(size=50,times=1000){
Y<-data.frame()
for(i in 1:times){
y<-rexp(n=size,rate=1)
y<-data.frame(y)
y<-t(y)
Y<-rbind.data.frame(Y,y)
}
name<-paste0("ExpSample_",1:times)
rownames(Y)<-name
return(Y)
}
Y=GenerateSample(size = 50,times = 1000)
dim(Y)
head(Y)
head(apply(Y,1,mean))
?legend
A1=ExponentialSmoothing(x,0.2)
A2=ExponentialSmoothing(x,0.5)
n=length(x)
plot(1:n,x,type="o",lty=2,pch=2)
lines(1:n,A1,type="o",col="red",pch=3,lty=3)
lines(1:n,A2,type="o",col="blue",pch=4,lty=4)
n=length(x)
plot(1:n,x,type="l",lty=2,pch=2)
lines(1:n,A1,type="l",col="red",pch=3,lty=3)
lines(1:n,A2,type="l",col="blue",pch=4,lty=4)
n=length(x)
plot(1:n,x,type="l",lty=2)
lines(1:n,A1,type="l",col="red",lty=3)
lines(1:n,A2,type="l",col="blue",lty=4)
n=length(x)
plot(1:n,x,type="l",lty=2)
lines(1:n,A1,type="l",col="red",lty=3)
lines(1:n,A2,type="l",col="blue",lty=4)
legend(x=15,y=25,lty = c(2,3,4),
legend = c("origin","lambda=0.2","lambda=0.5"),
col = c("black","red","blue"))
n=length(x)
plot(1:n,x,type="l",lty=2)
lines(1:n,A1,type="l",col="red",lty=3)
lines(1:n,A2,type="l",col="blue",lty=4)
legend(x=12,y=27,lty = c(2,3,4),
legend = c("origin","lambda=0.2","lambda=0.5"),
col = c("black","red","blue"))
??ravel
Y=as.vector(Ymat)
Ymat<-GenerateSample(size = 50,times = 1000)
Y=as.vector(Ymat)
length(Y)
dim(Y)
Ymat<-as.matrix(Ymat)
Y=as.vector(Ymat)
Ymat<-GenerateSample(size = 50,times = 1000)
mu_hat=apply(Ymat,2,mean)
SampleExp=apply(Ymat,2,function(y){
y_hat=mean(y)
yn=sqrt(n)*(y_hat-mu)/sqrt(Var)
return(yn)
})
mu=1 # mu=lamnda
Var=1 # std=lamda
n=50
SampleExp=apply(Ymat,2,function(y){
y_hat=mean(y)
yn=sqrt(n)*(y_hat-mu)/sqrt(Var)
return(yn)
})
mu=1 # mu=lamnda
Var=1 # std=lamda
n=50
SampleExp=apply(Ymat,1,function(y){
y_hat=mean(y)
yn=sqrt(n)*(y_hat-mu)/sqrt(Var)
return(yn)
})
StandarNorm=rnorm(n=1000)
plot(1:1000,SampleExp,col="black",lty=2)
plot(1:1000,SampleExp,col="black",lty=2,type="l")
lines(1:1000,StandarNorm,col="red",lty=3,type="l")
StandarNorm=rnorm(n=1000)
plot(1:1000,SampleExp,col="black",lty=2,type="l",xlab = NULL,ylab=NULL)
lines(1:1000,StandarNorm,col="red",lty=3,type="l")
StandarNorm=rnorm(n=1000)
plot(1:1000,SampleExp,col="black",lty=2,type="l",xlab = NULL,ylab=NULL)
lines(1:1000,StandarNorm,col="red",lty=3,type="l")
plot(1:1000,SampleExp,col="black",lty=2,type="l",xlab = NULL,ylab=NULL)
plot(1:1000,SampleExp,col="black",lty=2,type="l",xlab = NULL)
plot(1:1000,SampleExp,col="black",lty=2,type="l",xlab = NULL)
psych::kurtosi
dim(x)
dim(Ymat)
Kurt<-function(x,na.rm=TRUE){
if(na.rm){
x<-x[!is.na(x)]
}
mx<-mean(x,na.rm = na.rm)
sdx<-sd(x,na.rm = na.rm)
n<-length(x[!is.na(x)])
kurt<-sum((x-mx)^4,na.rm = na.rm)*n/(sum((x-mx)^2,na.rm = na.rm)^2)-3
return(kurt)
}
y <- c(-0.90, 0.47, 0.87, -5.37, -0.48,
0.24, 0.71, 0.58, -0.54 ,-0.41,
0.09, 0.32, 0.07, 1.70, -0.41,
0.33, -0.72, -0.74, -0.35, 1.14)
Kurt(y)
n<-length(n)
n<-length(y)
n
numeric(10)
y <- c(-0.90, 0.47, 0.87, -5.37, -0.48,
0.24, 0.71, 0.58, -0.54 ,-0.41,
0.09, 0.32, 0.07, 1.70, -0.41,
0.33, -0.72, -0.74, -0.35, 1.14)
size=50
sims=1000
kurts<-numeric(sims)
for( s in 1:sims){
bs<-sample(y,size=n,replace = TRUE)
kurt<-Kurt(bs,na.rm = TRUE)
kurts[s]<-kurt
}
head(kurts)
size=10
sims=1000
kurts<-numeric(sims)
for( s in 1:sims){
bs<-sample(y,size=n,replace = TRUE)
kurt<-Kurt(bs,na.rm = TRUE)
kurts[s]<-kurt
}
heaf(kurts)
head(kurts)
t_alpha_2=qt(p=1-0.95/2,df=n-1)
t_alpha_2
t_alpha_2=qt(p=1-0.05/2,df=n-1)
t_alpha_2
sample_sd
n=sims
kurt_hat=mean(kurts)
sample_sd=sd(kurts)
t_alpha_2
E=sample_sd/sqrt(n)
E
lower=kurt_hat-E*t_alpha_2
upper=kurt_hat+E*t_alpha_2
lower
upper
BootConf<-function(y,size,times=1000,alpha=0.05){
kurts=numeric(times)
for( s in 1:times){
bs<-sample(y,size=size,replace = TRUE)
kurt<-Kurt(bs,na.rm = TRUE)
kurts[s]<-kurt
}
n=times
kurt_hat=mean(kurts)
sample_sd=sd(kurts)
t_alpha_2=qt(p=alpha/2,df=n-1)
E=sample_sd/sqrt(n)
## confidence interval
lower=kurt_hat-E*t_alpha_2
upper=kurt_hat+E*t_alpha_2
return(lower,upper)
}
BootConf(y,size=20,times=1000)
return(list(lower,upper))
BootConf<-function(y,size,times=1000,alpha=0.05){
kurts=numeric(times)
for( s in 1:times){
bs<-sample(y,size=size,replace = TRUE)
kurt<-Kurt(bs,na.rm = TRUE)
kurts[s]<-kurt
}
n=times
kurt_hat=mean(kurts)
sample_sd=sd(kurts)
t_alpha_2=qt(p=alpha/2,df=n-1)
E=sample_sd/sqrt(n)
## confidence interval
lower=kurt_hat-E*t_alpha_2
upper=kurt_hat+E*t_alpha_2
return(list(lower,upper))
}
return(list(lower,upper))
BootConf(y,size=20,times=1000)
BootConf(y,size=10,times=1000)
BootConf<-function(y,size,times=1000,alpha=0.05){
kurts=numeric(times)
for( s in 1:times){
bs<-sample(y,size=size,replace = TRUE)
kurt<-Kurt(bs,na.rm = TRUE)
kurts[s]<-kurt
}
n=times
kurt_hat=mean(kurts)
sample_sd=sd(kurts)
t_alpha_2=qt(p=1-alpha/2,df=n-1)
E=sample_sd/sqrt(n)
## confidence interval
lower=kurt_hat-E*t_alpha_2
upper=kurt_hat+E*t_alpha_2
return(list(lower,upper))
}
BootConf(y,size=10,times=1000)
BootConf(y,size=20,times=1000)
BootConf(y,size=1000,times=1000)
BootConf(y,size=200,times=1000)
BootConf(y,size=200,times=10000)
Kurt(y)
### try size=100,times=1000 to caculate confdence interval
BootConf(y,size=100,times=1000)
### try size=100,times=1000 to caculate confdence interval
boxplot(BootConf(y,size=100,times=1000))
BootConf(y,size=10,times=1000)
BootConf(y,size=20,times=1000)
BootConf(y,size=50,times=1000)
BootConf(y,size=100,times=1000)
BootConf(y,size=200,times=1000)
## Question 3
install.packages("DAAG")
library(DAAG)
data("rainforest")
str(rainforest)
rainforest
rainforest$wood
?subset
subset(rainforest,species%in%c())
str(rainforest$species)
(rainforest$species)
subset(rainforest,species%in%c("B. myrtifolia","Acmena smithii"),wood)
table(rainforest$species)
Bmyrtifolia.wood<-subset(rainforest,species%in%c("B. myrtifolia"),wood)
Acmenasmithii.wood<-subset(rainforest,species%in%c("Acmena smithii"),wood)
Bmyrtifolia.wood
Acmenasmithii.wood
dim(Bmyrtifolia.wood)
dim(Acmenasmithii.wood)
as.vector(Bmyrtifolia.wood)
Bmyrtifolia.wood$wood
return(rowMeans(Y))
Bootstrap<-function(x,size,times=1000){
Y=data.frame()
for(i in 1:times){
y=sample(z,size = size,replace = TRUE)
y=t(data.frame(y))
Y=rbind(Y,y)
}
name=paste0("Boostrap_",1:times)
rownames(Y)=name
return(rowMeans(Y))
}
x=Bootstrap(Bmyrtifolia.wood,size=20,times = 1000)
Bootstrap<-function(x,size,times=1000){
Y=data.frame()
for(i in 1:times){
y=sample(x,size = size,replace = TRUE)
y=t(data.frame(y))
Y=rbind(Y,y)
}
name=paste0("Boostrap_",1:times)
rownames(Y)=name
return(rowMeans(Y))
}
x=Bootstrap(Bmyrtifolia.wood,size=20,times = 1000)
Bootstrap<-function(x,size,times=1000){
Y=data.frame()
for(i in 1:times){
y=sample(x,size = size,replace = TRUE)
y=t(data.frame(y))
Y=rbind.data.frame(Y,y)
}
name=paste0("Boostrap_",1:times)
rownames(Y)=name
return(rowMeans(Y))
}
x=Bootstrap(Bmyrtifolia.wood,size=20,times = 1000)
Bootstrap<-function(x,size,times=1000){
Y=data.frame()
for(i in 1:times){
y=sample(x,size = size,replace = TRUE)
y=t(data.frame(y))
Y=rbind.data.frame(Y,y)
}
return(rowMeans(Y))
}
x=Bootstrap(Bmyrtifolia.wood,size=20,times = 1000)
length(x)
Bootstrap<-function(x,size,times=1000){
Y=data.frame()
for(i in 1:times){
y=sample(x,size = size,replace = TRUE)
y=t(data.frame(y))
Y=rbind.data.frame(Y,y)
}
return(apply(Y,1,mean))
}
x=Bootstrap(Bmyrtifolia.wood,size=20,times = 1000)
length(x)
sample(Bmyrtifolia.wood.20)
sample(Bmyrtifolia.wood,20)
sample(Bmyrtifolia.wood,20,replace = T)
Bmyrtifolia.wood<-subset(rainforest,species%in%c("B. myrtifolia"),wood)$wood
Acmenasmithii.wood<-subset(rainforest,species%in%c("Acmena smithii"),wood)$wood
sample(Bmyrtifolia.wood,20,replace = T)
x=Bootstrap(Bmyrtifolia.wood,size = 20)
length(x)
head(x)
Bmyrtifolia.wood<-subset(rainforest,species%in%c("B. myrtifolia"),wood)$wood
Acmenasmithii.wood<-subset(rainforest,species%in%c("Acmena smithii"),wood)$wood
Bootstrap<-function(x,size,times=1000){
Y=data.frame()
for(i in 1:times){
y=sample(x,size = size,replace = TRUE)
y=t(data.frame(y))
Y=rbind.data.frame(Y,y)
}
name=paste0("Boostrap_",1:times)
rownames(Y)=name
return(apply(Y,1,mean))
}
x=Bootstrap(Bmyrtifolia.wood,size = 20)
length(x)
head(x)
BmyrWood<-Bootstrap(Bmyrtifolia.wood,size = 50)
AcmeaWood<-Bootstrap(Acmenasmithii.wood,size = 50)
t.test(BmyrWood,AcmeaWood)
x=t.test(BmyrWood,AcmeaWood)
x$conf.int
?t.test
size50<-t.test(BmyrWood,AcmeaWood,conf.level = 0.95,alternative = "two.sided")$conf.int
size50
setwd("D:/DataScience-job/20181115R/")
summary(BankHWWfile)
BankHWWfile<-read.csv("./BankHWfile.csv",header = TRUE)
summary(BankHWWfile)
sum(is.na(BankHWWfile))
BankHWWfile<-read.csv("./BankHWfile.csv",header = TRUE)
sprintf("There is :%d NA value",sum(is.na(BankHWWfile)))
summary(BankHWWfile)
sprintf("There is :%d NA value \n",sum(is.na(BankHWWfile)))
cat("There is :%d NA value",sum(is.na(BankHWWfile)))
cat("There is :%d NA value \n",sum(is.na(BankHWWfile)))
cat("There is :%d NA value",sum(is.na(BankHWWfile)),"\n")
BankHWWfile<-read.csv("./BankHWfile.csv",header = TRUE)
cat("There is :%d NA value",sum(is.na(BankHWWfile)),"\n")
summary(BankHWWfile)
pairs(BankHWWfile[,-c("y")])
pairs(BankHWWfile[,-7])
pairs(BankHWWfile)
str(BankHWWfile)
model.1<-glm(y~education,data=BankHWWfile)
summary(model.1)
aov(model.1)
model.2=glm(y~1,data=BankHWWfile)
aov(model.1,model.2)
anova(model.1,model.2)
rm(model.1)
colanme
colnames(BankHWWfile)
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile)
model.reduce.edu<-glm(y~age+contact+month+campaign+poutcome,data=BankHWWfile)
model.reduce.age<-glm(y~age+contact+month+campaign+poutcome,data = BankHWWfile)
rm(model.2)
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile) # with age,edu
model.reduce.edu<-glm(y~age+contact+month+campaign+poutcome,data=BankHWWfile) # without edu
model.reduce.age<-glm(y~eduaction+contact+month+campaign+poutcome,data = BankHWWfile) #without age
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile) # with age,edu
model.reduce.edu<-glm(y~age+contact+month+campaign+poutcome,data=BankHWWfile) # without edu
model.reduce.age<-glm(y~educattion+contact+month+campaign+poutcome,data = BankHWWfile) #without age
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile) # with age,edu
model.reduce.edu<-glm(y~age+contact+month+campaign+poutcome,data=BankHWWfile) # without edu
model.reduce.age<-glm(y~education+contact+month+campaign+poutcome,data = BankHWWfile) #without age
?anova
anova(model.full,model.reduce.edu, test="LRT")
anova(model.full,model.reduce.age,test="LRT")
summary(model.full)
?glm
str(BankHWWfile)
BankHWWfile$y<-as.factor(BankHWWfile$y)
BankHWWfile$campaign<-as.factor(BankHWWfile$campaign)
str(BankHWWfile)
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile) # with age,edu
table(BankHWWfile$y)
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile,family = "binomial") # with age,edu
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile,family = "binomial") # with age,edu
model.reduce.edu<-glm(y~age+contact+month+campaign+poutcome,data=BankHWWfile,family = "binomial") # without edu
model.reduce.age<-glm(y~education+contact+month+campaign+poutcome,data = BankHWWfile,family = "binomial") #without age
summary(model.full)
anova(model.full,model.reduce.edu, test="LRT")
anova(model.full,model.reduce.age,test="LRT")
table(BankHWWfile$education)
library(ggplot2)
p1<-ggplot(data = BankHWWfile,aes(x=age,y=y))+geom_point(aes(color=y))
p1
p1<-ggplot(data = BankHWWfile,aes(x=age,y=y))+geom_boxplot(aes(fill=y))
p1
p1<-ggplot(data = BankHWWfile,aes(x=eduaction,y=y))+geom_boxplot(aes(fill=y))
p1
p1<-ggplot(data = BankHWWfile,aes(x=education,y=y))+geom_boxplot(aes(fill=y))
p1
p1<-ggplot(data = BankHWWfile,aes(x=education,y=y))+geom_bar(aes(fill=y))
p1
p1<-ggplot(data = BankHWWfile,aes(x=education))+geom_bar()
p1
p1<-ggplot(data = BankHWWfile,aes(x=education,fill=y))+geom_bar()
p1
str(BankHWWfile)
ggplot(data = BankHWWfile,aes(x=contact,fill=y))+geom_bar()
require(ggplot2)
ggplot(data = BankHWWfile,aes(x=education,fill=y))+geom_bar()  # barplot eduaction ,group by y
ggplot(data = BankHWWfile,aes(x=contact,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=month,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=campaign,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=poutcome,fill=y))+geom_bar()
head(BankHWWfile)
require(ggplot2)
ggplot(data = BankHWWfile,aes(x=month,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=contact,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=campaign,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=poutcome,fill=y))+geom_bar()
model.full<-glm(y~contact+month+campaign+poutcome,data=BankHWWfile,family = "binomial")
model.reduce.month<-glm(y~contact+campaign+poutcome,data=BankHWWfile,family = "binomial")
model.reduce.poutcome<-glm(y~contact+campaign+month,data=BankHWWfile,family = "binomial")
model.reduce.campaign<-glm(y~contact+month+poutcome,data=BankHWWfile,family = "binomial")
model.full<-glm(y~age+education+contact+month+campaign+poutcome,data=BankHWWfile,family = "binomial") # with age,edu
model.reduce.edu<-glm(y~age+contact+month+campaign+poutcome,data=BankHWWfile,family = "binomial") # without edu
model.reduce.age<-glm(y~education+contact+month+campaign+poutcome,data = BankHWWfile,family = "binomial") #without age
#summary(model.full)
anova(model.full,model.reduce.edu, test="LRT")
anova(model.full,model.reduce.age,test="LRT")
ggplot(data = BankHWWfile,aes(fill=month,x=y))+geom_bar()
require(ggplot2)
ggplot(data = BankHWWfile,aes(x=month,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=contact,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=education,fill=y))+geom_bar()
require(ggplot2)
ggplot(data = BankHWWfile,aes(x=month,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=contact,fill=y))+geom_bar()
ggplot(data = BankHWWfile,aes(x=education,fill=y))+geom_bar()
anova(model.reduce.age,model.full)
anova(model.reduce.age,model.full,test="LRT")
model.2=glm(y~1,family = "binomial")
glm?
???
Sadps
?glm
